{"version":3,"file":"static/js/231.1f8903ce.chunk.js","mappings":"mLACA,MAAmC,mCAAnC,EAAoF,8BAApF,EAAwI,sCAAxI,EAA4L,8B,iBCD/KA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,kBCIjBC,EAAW,WAEtB,IAAMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,EAASG,EAAmBC,gBAC7B,GAAE,CAACJ,IACJ,IAAML,GAAWU,EAAAA,EAAAA,IAAYC,GACvBR,GAASO,EAAAA,EAAAA,IAAYC,GACrBC,EAAkBZ,EAASG,QAAO,SAAAU,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASb,EAAOY,cAA/C,IAK/C,OACE,iCACE,sCACA,gBAAKE,UAAWC,EAAhB,UACE,wBACGN,EAAgBO,OAAS,EAAKP,EAAgBQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,OAAb,OACnD,gBAAIL,UAAWC,EAAf,WACE,iBAAMD,UAAWC,IACdJ,EAFL,KAEaQ,GACX,mBAAQL,UAAWC,EAAyBK,QAAS,kBAb5C,SAACF,GAClBhB,EAASG,EAAmBgB,cAAcH,GAC3C,CAWoEI,CAAWJ,EAAjB,EAArD,gEAHmCA,EADc,KAO7C,uDAKf,EClCD,EAA8B,4BAA9B,EAAwE,4B,SCI3DK,EAAS,WACpB,IAAMrB,GAAWC,EAAAA,EAAAA,MACXH,GAASO,EAAAA,EAAAA,IAAYC,GAI3B,OACE,gBAAKM,UAAWC,EAAhB,UACE,uDACwB,mBACtB,kBAAOS,KAAK,OAAOC,MAAOzB,EAAQc,UAAWC,EAAiBW,SAP/C,SAAAC,GACnBzB,GAAS0B,EAAAA,EAAAA,GAAOD,EAAME,cAAcJ,OACrC,QASF,EClBD,EAA4B,wBAA5B,EAAgE,wBAAhE,EAA2G,+BCI9FK,EAAO,WAClB,IAAM5B,GAAWC,EAAAA,EAAAA,MACXN,GAAWU,EAAAA,EAAAA,IAAYC,GAmB7B,OAEE,+BACI,kBAAMuB,SArBS,SAAAJ,GACnBA,EAAMK,iBACN,IAAMC,EAAON,EAAME,cACfhC,EAASqC,MAAK,SAAAC,GAAO,OAAKA,EAAQxB,KAAKC,gBAAkBqB,EAAKG,SAASzB,KAAKc,MAAMb,aAA7D,IACvByB,MAAM,QAAD,OAASJ,EAAKG,SAASzB,KAAKc,MAA5B,4BAGH5B,EAASqC,MAAK,SAAAC,GAAO,OAAKA,EAAQhB,OAAOP,gBAAkBqB,EAAKG,SAASjB,OAAOM,MAAMb,aAAjE,IACvByB,MAAM,UAAD,OAAWJ,EAAKG,SAASjB,OAAOM,MAAhC,6BAGPvB,EAASG,EAAmBiC,WAAW,CACrC3B,KAAMsB,EAAKG,SAASzB,KAAKc,MACzBN,OAAQc,EAAKG,SAASjB,OAAOM,SAE/BQ,EAAKM,QACN,EAKmCzB,UAAWC,EAAzC,WACE,qCAEE,mBACA,kBACED,UAAWC,EACXS,KAAK,OACLb,KAAK,OACL6B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBACA,wCACS,mBACP,kBACE5B,UAAWC,EACXS,KAAK,MACLb,KAAK,SACL6B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBACA,mBAAQlB,KAAK,SAASV,UAAWC,EAAjC,6BAIT,ECvDc,SAAS4B,IACtB,OACE,4BACE,SAACb,EAAD,KACA,SAACP,EAAD,KACA,SAACtB,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","redux/contacts/contactsSelectors.js","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactListBlock\":\"Contacts_contactListBlock__Imthg\",\"contactItem\":\"Contacts_contactItem__qm4r1\",\"buttonDeleteContact\":\"Contacts_buttonDeleteContact__UshlI\",\"spanContact\":\"Contacts_spanContact__YM+mF\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\n","import css from \"./Contacts.module.css\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts'; \nimport { useEffect } from \"react\";\n  \nexport const Contacts = () => {\n  \n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts())\n  }, [dispatch]);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  const deleteItem = (id) => {\n    dispatch(contactsOperations.deleteContact(id));\n  }\n  \n  return (\n    <>\n      <h2>Contacts</h2>\n      <div className={css.contactListBlock}>\n        <ul>\n          {visibleContacts.length > 0 ? (visibleContacts.map(({ id, name, number }) => (\n          <li className={css.contactItem} key={id}>\n            <span className={css.spanContact}></span>\n              {name}: {number}\n            <button className={css.buttonDeleteContact} onClick={() => deleteItem(id)}>Видалити</button>\n          </li>\n            \n          ))) : <p>There are no contacts</p>}\n        </ul>\n      </div>\n    </>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"filterBlock\":\"Filter_filterBlock__whgWd\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from \"./Filter.module.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from 'redux/filterSlice';\nimport { contactsSelectors } from 'redux/contacts';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const changeFilter = event => {\n    dispatch(update(event.currentTarget.value));\n  }\n  return (\n    <div className={css.filterBlock}>\n      <label>\n        Find contacts by name <br />\n        <input type=\"text\" value={filter} className={css.inputFilter} onChange={changeFilter} />\n      </label>\n    </div>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"formBlock\":\"Form_formBlock__GgFah\",\"inputForm\":\"Form_inputForm__wnZfX\",\"addContactButton\":\"Form_addContactButton__08Vlt\"};","import React from \"react\";\nimport css from \"./Form.module.css\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (contacts.some(element => (element.name.toLowerCase() === form.elements.name.value.toLowerCase()))) {\n      alert(`User ${form.elements.name.value} is already in contacts`);\n      return;\n    }\n    if (contacts.some(element => (element.number.toLowerCase() === form.elements.number.value.toLowerCase()))) {\n      alert(`Number ${form.elements.number.value} is already in contacts`);\n      return;\n    }\n    dispatch(contactsOperations.addContact({\n      name: form.elements.name.value,\n      number: form.elements.number.value\n    }))\n    form.reset();\n  };\n\n  return (\n    // <div className={css.phonebookBlock}>\n    <>\n        <form onSubmit={handleSubmit} className={css.formBlock}>  \n          <label>\n            Name\n            <br />\n            <input\n              className={css.inputForm}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <br />\n          <label>\n            Number <br />\n            <input\n              className={css.inputForm}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <br />\n          <button type=\"submit\" className={css.addContactButton}>Add contact</button>\n        </form>\n    </>\n    )\n}","import { Contacts } from \"components/Contacts/Contacts\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Form } from \"components/Form/Form\";\n\nexport default function Login() {\n  return (\n    <div>\n      <Form/>\n      <Filter/>\n      <Contacts />\n    </div>\n  );\n}"],"names":["getContacts","state","contacts","items","getFilter","filter","Contacts","dispatch","useDispatch","useEffect","contactsOperations","fetchContacts","useSelector","contactsSelectors","visibleContacts","contact","name","toLowerCase","includes","className","css","length","map","id","number","onClick","deleteContact","deleteItem","Filter","type","value","onChange","event","update","currentTarget","Form","onSubmit","preventDefault","form","some","element","elements","alert","addContact","reset","pattern","title","required","Login"],"sourceRoot":""}